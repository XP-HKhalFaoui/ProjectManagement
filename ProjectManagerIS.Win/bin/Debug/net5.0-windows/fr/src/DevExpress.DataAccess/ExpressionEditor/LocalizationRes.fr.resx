<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--***************************************************************************
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//*****************************************************************************
-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExpressionEditorStringId.Constant_True" xml:space="preserve">
    <value>Représente la valeur booléenne True.</value>
  </data>
  <data name="ExpressionEditorStringId.Constant_False" xml:space="preserve">
    <value>Représente la valeur booléenne False.</value>
  </data>
  <data name="ExpressionEditorStringId.Constant_Null" xml:space="preserve">
    <value>Représente une référence null, celui qui ne fait pas référence à n'importe quel objet.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Plus" xml:space="preserve">
    <value>Ajoute de la valeur d'une expression numérique à une autre, ou concatène deux chaînes.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Minus" xml:space="preserve">
    <value>Recherche la différence entre deux nombres.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Multiply" xml:space="preserve">
    <value>Multiplie la valeur de deux expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Divide" xml:space="preserve">
    <value>Divise la première opérande par la seconde.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Modulo" xml:space="preserve">
    <value>Retourne le reste (module) obtenu par la division d'une expression numérique par une autre.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseOr" xml:space="preserve">
    <value>Compare chaque bit de la première opérande au bit correspondant de la seconde opérande. Si les deux bits sont à 1, le bit correspondant dans le résultat est mis à 0. Dans les autres cas, le bit correspondant dans le résultat est mis à 0.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseAnd" xml:space="preserve">
    <value>Effectue une opération AND logique au niveau du bit entre deux valeurs entières.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_BitwiseXor" xml:space="preserve">
    <value>Effectue une exclusion logique sur deux expressions booléennes ou une exclusion bit à bit sur deux expressions numériques.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Equal" xml:space="preserve">
    <value>Retourne trues si les deux opérandes ont la même valeur ; sinon, elle retourne false.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_NotEqual" xml:space="preserve">
    <value>Retourne true si les opérandes n'ont pas la même valeur ; sinon, elle retourne false.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Less" xml:space="preserve">
    <value>Moins d'opérateur. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_LessOrEqual" xml:space="preserve">
    <value>Inférieur ou égal à l'opérateur. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_GreaterOrEqual" xml:space="preserve">
    <value>Opérateur supérieur ou égal à. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Greater" xml:space="preserve">
    <value>Opérateur supérieur à. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_In" xml:space="preserve">
    <value>In (,,,)
Teste l'existence d'une propriété dans un objet.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Like" xml:space="preserve">
    <value>Compare une chaine par rapport à un modèle. Si la valeur de la chaine correspond au modèle, le resultat est vrai. Si la chaine ne correspond pas au modèle, le résultat est faux. Si la chaine et le modèle sont des chaines vides, le résultat est vrai.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Between" xml:space="preserve">
    <value>Between (,)
Spécifie une plage à tester. Retourne vrai si une valeur est plus grande ou égale à la première opérande et plus petite ou égale à la secondes opérande.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_And" xml:space="preserve">
    <value>Effectue une conjonction logique sur deux expressions.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Or" xml:space="preserve">
    <value>Effectue une disjonction logique sur deux expressions Boolean.</value>
  </data>
  <data name="ExpressionEditorStringId.Operator_Not" xml:space="preserve">
    <value>Effectue une négation logique sur une expression.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Max" xml:space="preserve">
    <value>Max(Valeur1, Valeur2)
Retourne la valeur maximum à partir des valeurs spécifiées.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Min" xml:space="preserve">
    <value>Min(Valeur1, Valeur2)
Retourne la valeur minimum à partir des valeurs spécifiées.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Abs" xml:space="preserve">
    <value>Abs(Valeur)
Retourne la valeur absolue positive de l'expression numérique donnée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Acos" xml:space="preserve">
    <value>Acos(Valeur)
Retourne l'arccosinus d'un nombre (l'angle, en radians, dont le cosinus est l'expression flottante donnée).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Asin" xml:space="preserve">
    <value>Asin(Valeur)
Retourne l'arcsinus d'un nombre (l'angle, en radians, dont le sinus est le nombre flottant donné).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Atn" xml:space="preserve">
    <value>Atn(Value)
Retourne l'arctangente d'un nombre (l'angle, en radians, dont la tangente est le nombre flottant donné).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Atn2" xml:space="preserve">
    <value>Atn2(Valeur1, Valeur2)
Retourne l'angle dont la tangente est le quotient des nombres spécifiés, en radians.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_BigMul" xml:space="preserve">
    <value>BigMul(Valeur1, Valeur2)
Retourne un entier 64 bits contenant le produit des deux numériques 32 bits spécifiés.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Ceiling" xml:space="preserve">
    <value>Ceiling(Valeur)
Retourne le plus petit entier qui est plus grand ou égal à l'expression numérique donnée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Cos" xml:space="preserve">
    <value>Cos(Valeur)
Retourne le cosinus de l'angle exprimé en radians.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sin" xml:space="preserve">
    <value>Sin(Valeur)
Retourne le sinus de l'angle défini en radians.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Tan" xml:space="preserve">
    <value>Tan(Valeur)
Retourne la tangente de l'angle défini en radians.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Cosh" xml:space="preserve">
    <value>Cosh(Valeur)
Retourne le cosinus hyperbolique de l'angle exprimé en radians.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sinh" xml:space="preserve">
    <value>Sinh(Valeur)
Retourne le sinus hyperbolique de l'angle défini en radians.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Tanh" xml:space="preserve">
    <value>Tanh(Valeur)
Retourne la tangente hyperbolique de l'angle défini en radians.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Exp" xml:space="preserve">
    <value>Exp(Valeur)
Retourne la valeur exponentielle de la valeur numérique donnée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sqr" xml:space="preserve">
    <value>Sqr(Valeur)
Retourne la racine carré d'un nombre donné.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Floor" xml:space="preserve">
    <value>Floor(Valeur)
Retourne le plus grand entier inférieur ou égal à l'expression numérique donnée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Sign" xml:space="preserve">
    <value>Sign(Valeur)
Retourne le signe positif (+1), zéro (0), ou négatif (-1) de l'expression donnée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Round" xml:space="preserve">
    <value>Round(Valeur)
Arrondie la valeur donnée à l'entier le plus proche.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Round_2" xml:space="preserve">
    <value>Tour(valeur, précision)
Arrondit la valeur donnée à l'entier le plus proche, ou à un nombre spécifié de décimales.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log" xml:space="preserve">
    <value>Log(Valeur)
Retourne le logarithme naturel d'un nombre spécifié.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log_2" xml:space="preserve">
    <value>Log(Valeur, Base)
Retourne le logarithme d'un nombre spécifié dans une base spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Log10" xml:space="preserve">
    <value>Log10(Valeur)
Retourne le logarithme bse 10 du nombre spécifié.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Power" xml:space="preserve">
    <value>Power(Valeyr, Puissance)
Retourne un nombre donné à une puissance donnée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Rnd" xml:space="preserve">
    <value>Rnd()
Retourne un nombre aléatoire qui est inférieur à 1 mais supérieur ou égal à 0.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToInt" xml:space="preserve">
    <value>ToInt(Value)
Convertit la valeur d'un entier signé de 32 bits équivalent.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToLong" xml:space="preserve">
    <value>ToLong(Value)
Convertit la valeur en entier signé 64 bits équivalent.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToFloat" xml:space="preserve">
    <value>ToFloat(Value)
Convertit la valeur d'un nombre à virgule flottante simple précision équivalent de 32 bits.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToDouble" xml:space="preserve">
    <value>ToDouble(Value)
Convertit la valeur d'un nombre à virgule flottante double précision équivalent de 64-bit.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToDecimal" xml:space="preserve">
    <value>ToDecimal(Value)
Convertit la valeur d'un nombre décimal équivalent.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_StartsWith" xml:space="preserve">
    <value>StartsWith(String, StartString)
Retourne True si le début de la chaîne correspond à StartString ; Sinon, False est retourné.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_EndsWith" xml:space="preserve">
    <value>EndsWith(String, EndString)
Retourne True si la fin de la chaîne correspond à EndString ; Sinon, False est retourné.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Contains" xml:space="preserve">
    <value>Contient(chaîne, sous-chaîne)
Retourne True si la sous-chaîne se produit au sein de la chaîne ; Sinon, False est retourné.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Trim" xml:space="preserve">
    <value>Trim(String)
Supprimer tous les caractères ESPACE en début et fin de chaîne.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Len" xml:space="preserve">
    <value>Len(Valeur)
Retourne un entier contenant soit le nombre de caractères dans une chaine soit le nombre de bit requis pour stocker une variable..</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Upper" xml:space="preserve">
    <value>Upper(String)
Retourne la chaine en majuscule.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Lower" xml:space="preserve">
    <value>Lower(Chaine)
Retourne la chaine en minuscule.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Concat" xml:space="preserve">
    <value>Concat(Chaine1, ... , ChaineN)
Retourne une chaine contenant la concaténation de la chaine courante avec toutes les chaines additionnelles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Ascii" xml:space="preserve">
    <value>Ascii(Chaine)
Retourne le code ASCII du caractère le plus à gauche de l'expression caractère.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Reverse" xml:space="preserve">
    <value>Reverse(Chaine)
Inverse l'ordre des éléments dans une chaine.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ToStr" xml:space="preserve">
    <value>ToStr(Valeur)
Retourne la représentation sous forme de chaîne d'un objet.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Char" xml:space="preserve">
    <value>Char(Nombre)
Convertit un integerASCIICode en caractère.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CharIndex" xml:space="preserve">
    <value>CharIndex(Chaine1, Chaine2)
Retourne la position de départ de Chaine1 dans Chaine2 en commençant la rechercher à la position 0 jusqu'à la fin de la chaine.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CharIndex_3" xml:space="preserve">
    <value>CharIndex(Chaine1, Chaine2, PositionDepart)
Retourne la position de départ de Chaine1 dans Chaine2 en commençant la rechercher à la position PositionDepart jusqu'à la fin de la chaine.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadLeft" xml:space="preserve">
    <value>PadLeft(Chaine, Longueur)
Aligne les caractères à gauche dans la chaine définie, complétant son coté droit par le caractère espace pour arriver à la longueur spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadRight" xml:space="preserve">
    <value>PadRight(Chaine, Longueur)
Aligne les caractères à droite dans la chaine définie, complétant son coté gauche par le caractère espace pour arriver à la longueur spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadLeft_3" xml:space="preserve">
    <value>PadLeft(Chaine, Longueur, Caractere)
Aligne les caractères à gauche dans la chaine définie, complétant son coté droit par le caractère spécifié pour arriver à la longueur spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_PadRight_3" xml:space="preserve">
    <value>PadRight(Chaine, Longueur, Caractere)
Aligne les caractères à droite dans la chaine définie, complétant son coté gauche par le caractère spécifié pour arriver à la longueur spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Remove" xml:space="preserve">
    <value>Remove(String, StartPosition)
Supprime tous les caractères de cette instance, commençant à la position spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Remove_3" xml:space="preserve">
    <value>Remove(Chaine, PositionDepart, Longueur)
Supprime un nombre spécifié de caractères dans Chaine en commençant à la position spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Replace" xml:space="preserve">
    <value>Replace(Chaine1, SousChaine2, Chaine3)
Retourne une copie de Chaine1 dans laquelle SousChaine2 a été remplacé par Chaine3.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Insert" xml:space="preserve">
    <value>Insert(Chaine1, PositionDepart, Chaine2)
Insert Chaine2 dans Chaine1 à la position spécifiée par PositionDepart.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Substring" xml:space="preserve">
    <value>Substring(String, StartPosition)
Retourne une sous-chaine à partir d'une chaine. La sous-chaine commence à la position StartPosition.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Substring_3" xml:space="preserve">
    <value>Substring(String, StartPosition, Length)
Retourne une sous-chaine à partir d'une chaine. La sous-chaine commence à la position StartPosition et a la longueur Length.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Iif" xml:space="preserve">
    <value>Iif(Expression, ExpressionVrai, ExpressionFaux)
Retourne ExpressionVrai ou ExpressionFaux en fonction de l'évaluation de l'expression booléenne.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNull" xml:space="preserve">
    <value>IsNull(Valeur)
Retourne vrai si la valeur spécifiée est nulle.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNullOrEmpty" xml:space="preserve">
    <value>IsNullOrEmpty(Chaine)
Retourne vrai si l'objet chaine spécifiée est nul ou une chaine vide, dans les autres cas, faux est retourné.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisWeek" xml:space="preserve">
    <value>IsThisWeek(DateTime)
Retourne True si la date spécifiée s'inscrit dans la semaine en cours.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisMonth" xml:space="preserve">
    <value>IsThisMonth(DateTime)
Retourne True si la date spécifiée s'inscrit dans le mois en cours.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsThisYear" xml:space="preserve">
    <value>IsThisYear(DateTime)
Retourne True si la date spécifiée s'inscrit dans l'année en cours.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeLastMonth" xml:space="preserve">
    <value>LocalDateTimeLastMonth()
Retourne une valeur date-heure correspondant au premier jour du mois précédent.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeLastYear" xml:space="preserve">
    <value>LocalDateTimeLastYear()
Retourne une valeur date-heure correspondant au premier jour de l’année précédente.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTwoMonthsAway" xml:space="preserve">
    <value>LocalDateTimeTwoMonthsAway()
Retourne une valeur date-heure correspondant au premier jour du mois suivant suivant.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTwoYearsAway" xml:space="preserve">
    <value>LocalDateTimeTwoYearsAway()
Retourne une valeur date-heure correspondant au premier jour de l’année après l’autre.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeYearBeforeToday" xml:space="preserve">
    <value>LocalDateTimeYearBeforeToday()
Retourne une valeur date-heure correspondant à l’année de la première journée il y a.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsJanuary" xml:space="preserve">
    <value>IsJanuary(DateTime)
Retourne True si la date spécifiée relève janvier.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsFebruary" xml:space="preserve">
    <value>IsFebruary(DateTime)
Retourne True si la date spécifiée relève février.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsMarch" xml:space="preserve">
    <value>IsMarch(DateTime)
Retourne True si la date spécifiée relève mars.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsApril" xml:space="preserve">
    <value>IsApril(DateTime)
Retourne True si la date spécifiée relève avril.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsMay" xml:space="preserve">
    <value>IsMay(DateTime)
Retourne True si la date spécifiée relève de la mai.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsJune" xml:space="preserve">
    <value>IsJune(DateTime)
Retourne True si la date spécifiée relève juin.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsJuly" xml:space="preserve">
    <value>IsJuly(DateTime)
Retourne True si la date spécifiée relève juillet.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsAugust" xml:space="preserve">
    <value>IsAugust(DateTime)
Retourne True si la date spécifiée relève août.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsSeptember" xml:space="preserve">
    <value>IsSeptember(DateTime)
Retourne True si la date spécifiée relève septembre.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsOctober" xml:space="preserve">
    <value>IsOctober(DateTime)
Retourne True si la date spécifiée relève octobre.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNovember" xml:space="preserve">
    <value>IsNovember(DateTime)
Retourne True si la date spécifiée relève novembre.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsDecember" xml:space="preserve">
    <value>IsDecember(DateTime)
Retourne True si la date spécifiée relève décembre.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsLastMonth" xml:space="preserve">
    <value>IsLastMonth(DateTime)
Retourne True si la date spécifiée s’inscrit dans le mois précédent.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsLastYear" xml:space="preserve">
    <value>IsLastYear(DateTime)
Retourne True si la date spécifiée s’inscrit dans l’année précédente.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNextMonth" xml:space="preserve">
    <value>IsNextMonth(DateTime)
Retourne True si la date spécifiée s’inscrit dans le mois suivant.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsNextYear" xml:space="preserve">
    <value>IsNextYear(DateTime)
Retourne True si la date spécifiée s’inscrit dans la prochaine année.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsYearToDate" xml:space="preserve">
    <value>IsYearToDate(DateTime)
Retourne True si la date spécifiée tombe dans la période de l’année à ce jour (commençant dès le premier jour de l’année en cours et en continuant jusqu'à la date actuelle).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_IsSameDay" xml:space="preserve">
    <value>IsSameDay (DateTime, DateTime)
Retourne True si les valeurs de date et heure spécifiées relèvent le même jour.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeDayAfterTomorrow" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
Retourne une valeur date-heure correspondant à après-demain.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeLastWeek" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
Retourne une valeur date-heure correspondant au premier jour de la semaine précédente.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextMonth" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
Retourne une valeur date-heure correspondant au premier jour du mois suivant.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextWeek" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
Retourne une valeur date-heure correspondant au premier jour de la semaine suivante.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNextYear" xml:space="preserve">
    <value>LocalDateTimeNextYear()
Retourne une valeur date-heure correspondant au premier jour de l'année suivante.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeNow" xml:space="preserve">
    <value>LocalDateTimeNow()
Retourne une valeur date-heure correspondant à l'heure actuelle dans le temps.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisMonth" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
Retourne une valeur date-heure correspondant au premier jour du mois en cours.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisWeek" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
Retourne une valeur date-heure correspondant au premier jour de la semaine en cours.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeThisYear" xml:space="preserve">
    <value>LocalDateTimeThisYear()
Retourne une valeur date-heure correspondant au premier jour de l'année en cours.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeToday" xml:space="preserve">
    <value>LocalDateTimeToday()
Retourne une valeur date-heure correspondant à nos jours.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTomorrow" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
Retourne une valeur date-heure correspondant à demain.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeTwoWeeksAway" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
Retourne une valeur date-heure correspondant au premier jour de la semaine suivant la semaine prochaine.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_LocalDateTimeYesterday" xml:space="preserve">
    <value>LocalDateTimeYesterday()
Retourne une valeur date-heure correspondant aux hier.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddTicks" xml:space="preserve">
    <value>AddTicks(DateHeure, NombreTicks)
Retourne une valeur date/heure qui est le nombre de ticks spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMilliSeconds" xml:space="preserve">
    <value>AddMilliSeconds(DateHeure, NombreMillisecondes)
Retourne une valeur date/heure qui est le nombre de millisecondes spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddSeconds" xml:space="preserve">
    <value>AddSeconds(DateHeure, NombreSecondes)
Retourne une valeur date/heure qui est le nombre de secondes spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMinutes" xml:space="preserve">
    <value>AddMinutes(DateHeure, NombreMinutes)
Retourne une valeur date/heure qui est le nombre de minutes spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddHours" xml:space="preserve">
    <value>AddHours(DateHeure, NombreHeures)
Retourne une valeur date/heure qui est le nombre d'heures spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddDays" xml:space="preserve">
    <value>AddDays(DateHeure, NombreJours)
Retourne une valeur date/heure qui est le nombre de jours spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddMonths" xml:space="preserve">
    <value>AddMonths(DateHeure, NombreMois)
Retourne une valeur date/heure qui est le nombre de mois spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddYears" xml:space="preserve">
    <value>AddYears(DateHeure, NombreAnnees)
Retourne une valeur date/heure qui est le nombre d'années spécifié ajouté à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AddTimeSpan" xml:space="preserve">
    <value>AddTimeSpan(DateHeure, Duree)
Retourne une valeur date/heure qui est la durée spécifiée ajoutée à la valeur date/heure spécifiée.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffDay" xml:space="preserve">
    <value>DateDiffDay(dateDepart, dateFin)
Retourne le nombre de jours entre deux dates non nulles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffHour" xml:space="preserve">
    <value>DateDiffHour(dateDepart, dateFin)
Retourne le nombre d'heures entre deux dates non nulles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMilliSecond" xml:space="preserve">
    <value>DateDiffMilliSecond(dateDepart, dateFin)
Retourne le nombre de millisecondes entre deux dates non nulles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMinute" xml:space="preserve">
    <value>DateDiffMinute(dateDepart, dateFin)
Retourne le nombre de minutes entre deux dates non nulles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffMonth" xml:space="preserve">
    <value>DateDiffMonth(dateDepart, dateFin)
Retourne le nombre de mois entre deux dates non nulles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffSecond" xml:space="preserve">
    <value>DateDiffSecond(dateDepart, dateFin)
Retourne le nombre de secondes entre deux dates non nulles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffTick" xml:space="preserve">
    <value>DateDiffTick(dateDepart, dateFin)
Retourne le nombre de ticks entre deux dates non nulles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_DateDiffYear" xml:space="preserve">
    <value>DateDiffYear(dateDepart, dateFin)
Retourne le nombre d'années entre deux dates non nulles.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDate" xml:space="preserve">
    <value>GetDate(DateHeure)
Extrait la date à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDay" xml:space="preserve">
    <value>GetDay(DateHeure)
Extrait le jour à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDayOfWeek" xml:space="preserve">
    <value>GetDayOfWeek(DateHeure)
Extrait le jour de la semaine à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetDayOfYear" xml:space="preserve">
    <value>GetDayOfYear(DateHeure)
Extrait le jour de l'année à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMilliSecond" xml:space="preserve">
    <value>GetMilliSecond(DateHeure)
Extrait les millisecondes à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMinute" xml:space="preserve">
    <value>GetMinute(DateHeure)
Extrait les minutes à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetMonth" xml:space="preserve">
    <value>GetMonth(DateHeure)
Extrait un mois à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetSecond" xml:space="preserve">
    <value>GetSecond(DateHeure)
Extrait les secondes à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetTimeOfDay" xml:space="preserve">
    <value>GetTimeOfDay(DateHeure)
Extrait le temps dans la journée à partir d'un Date/Heure, en ticks.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetYear" xml:space="preserve">
    <value>GetYear(DateHeure)
Extrait une année à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_GetHour" xml:space="preserve">
    <value>GetHour(DateHeure)
Extrait les heures à partir d'un Date/Heure.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Now" xml:space="preserve">
    <value>Now()
Retourne la date et heure système.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_Today" xml:space="preserve">
    <value>Today()
Retourne la date courante. En fonction de l'heure actuelle, cette fonction retourne minui de la date courante.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_UtcNow" xml:space="preserve">
    <value>UtcNow()
Retourne la date et heure système courante exprimée en  Coordinated Universal Time (UTC).</value>
  </data>
  <data name="ExpressionEditorStringId.Function_AvgAggregate" xml:space="preserve">
    <value>Avg(Value)
Évalue la moyenne des valeurs dans la collection.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_CountAggregate" xml:space="preserve">
    <value>Count()
Retourne le nombre d'objets dans une collection.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_ExistsAggregate" xml:space="preserve">
    <value>Exists()
Détermine si l'objet existe dans la collection.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_MaxAggregate" xml:space="preserve">
    <value>Max(Value)
Retourne la valeur de l'expression maximale dans une collection.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_MinAggregate" xml:space="preserve">
    <value>Min(Value)
Renvoie la valeur de l'expression minimum d'une collection.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_SumAggregate" xml:space="preserve">
    <value>Sum(Value) Retourne la somme de toutes les valeurs de l'expression dans la collection.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_SingleAggregate" xml:space="preserve">
    <value>Single()
Retourne un seul objet de la collection.</value>
  </data>
  <data name="ExpressionEditorStringId.Function_NewLine" xml:space="preserve">
    <value>Nouvelle ligne()

Renvoie la chaîne de nouvelle ligne définie pour cet environnement.</value>
  </data>
</root>