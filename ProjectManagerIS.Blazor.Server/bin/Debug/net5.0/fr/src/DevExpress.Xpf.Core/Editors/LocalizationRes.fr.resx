<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EditorStringId.ColorEdit_NoColorButtonCaption" xml:space="preserve">
    <value>Pas de couleurs</value>
  </data>
  <data name="EditorStringId.FilterClauseEndsWith" xml:space="preserve">
    <value>Finit par</value>
  </data>
  <data name="EditorStringId.FilterGroupNotAnd" xml:space="preserve">
    <value>NonEt</value>
  </data>
  <data name="EditorStringId.ColorEdit_RecentColorsCaption" xml:space="preserve">
    <value>Couleurs recents</value>
  </data>
  <data name="EditorStringId.FilterClauseEquals" xml:space="preserve">
    <value>Est égale à</value>
  </data>
  <data name="EditorStringId.Apply" xml:space="preserve">
    <value>Appliquer</value>
  </data>
  <data name="EditorStringId.No" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisWeek" xml:space="preserve">
    <value>Est plus tôt cette semaine</value>
  </data>
  <data name="EditorStringId.FilterClauseBetween" xml:space="preserve">
    <value>Est comprise entre</value>
  </data>
  <data name="EditorStringId.FilterToolTipKeysAdd" xml:space="preserve">
    <value>(Utilisez la touche insérer ou ajouter)</value>
  </data>
  <data name="EditorStringId.FilterToolTipElementAdd" xml:space="preserve">
    <value>Ajoute un nouvel élément à la liste</value>
  </data>
  <data name="EditorStringId.FilterPanelClearFilter" xml:space="preserve">
    <value>Effacer filtre</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeRemove" xml:space="preserve">
    <value>Effacer cette condition</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLaterThisMonth" xml:space="preserve">
    <value>Est plus tard ce mois</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLaterThisYear" xml:space="preserve">
    <value>Est plus tard cette année</value>
  </data>
  <data name="EditorStringId.FilterGroupAnd" xml:space="preserve">
    <value>Et</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringIn" xml:space="preserve">
    <value>Dans</value>
  </data>
  <data name="EditorStringId.FilterClauseLess" xml:space="preserve">
    <value>Est inférieure à</value>
  </data>
  <data name="EditorStringId.FilterClauseBeginsWith" xml:space="preserve">
    <value>Commence par</value>
  </data>
  <data name="EditorStringId.Paste" xml:space="preserve">
    <value>Coller</value>
  </data>
  <data name="EditorStringId.FilterDateTimeOperatorMenuCaption" xml:space="preserve">
    <value>DateTime opérateurs</value>
  </data>
  <data name="EditorStringId.FilterClauseNoneOf" xml:space="preserve">
    <value>Différente de</value>
  </data>
  <data name="EditorStringId.FilterEditorUnchecked" xml:space="preserve">
    <value>Décoché</value>
  </data>
  <data name="EditorStringId.FilterToolTipValueType" xml:space="preserve">
    <value>Comparer avec une valeur / une autre valeur d'un zone</value>
  </data>
  <data name="EditorStringId.Clear" xml:space="preserve">
    <value>Effacer</value>
  </data>
  <data name="EditorStringId.FilterClauseLessOrEqual" xml:space="preserve">
    <value>Est inférieure ou égale à</value>
  </data>
  <data name="EditorStringId.FilterClauseNotBetween" xml:space="preserve">
    <value>N'est pas entre</value>
  </data>
  <data name="EditorStringId.Open" xml:space="preserve">
    <value>Ouvert</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisYear" xml:space="preserve">
    <value>Est plus tôt cette année</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLastWeek" xml:space="preserve">
    <value>Est la semaine dernière</value>
  </data>
  <data name="EditorStringId.FilterClauseDoesNotEqual" xml:space="preserve">
    <value>N'est pas égal à</value>
  </data>
  <data name="EditorStringId.FilterGroupRemoveGroup" xml:space="preserve">
    <value>Effacer groupe</value>
  </data>
  <data name="EditorStringId.FilterGroupAddGroup" xml:space="preserve">
    <value>Ajouter groupe</value>
  </data>
  <data name="EditorStringId.FilterGroupClearAll" xml:space="preserve">
    <value>Effacer tout</value>
  </data>
  <data name="EditorStringId.Yes" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNotNull" xml:space="preserve">
    <value>N'est pas vide</value>
  </data>
  <data name="EditorStringId.FilterClauseIsLaterThisWeek" xml:space="preserve">
    <value>Est plus tard cette semaine</value>
  </data>
  <data name="EditorStringId.SelectAll" xml:space="preserve">
    <value>(Selectionnez tout)</value>
  </data>
  <data name="EditorStringId.FilterPanelEnableFilter" xml:space="preserve">
    <value>Activer filtre</value>
  </data>
  <data name="EditorStringId.FilterClauseBetweenAnd" xml:space="preserve">
    <value>et</value>
  </data>
  <data name="EditorStringId.Cut" xml:space="preserve">
    <value>Couper</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_AllItems" xml:space="preserve">
    <value>(Tous)</value>
  </data>
  <data name="EditorStringId.ColorEdit_AutomaticButtonCaption" xml:space="preserve">
    <value>Automatique</value>
  </data>
  <data name="EditorStringId.ColorEdit_ColorChooserWindowTitle" xml:space="preserve">
    <value>Couleurs</value>
  </data>
  <data name="EditorStringId.FilterClauseIsPriorThisYear" xml:space="preserve">
    <value>Avant cette année</value>
  </data>
  <data name="EditorStringId.FilterClauseIsToday" xml:space="preserve">
    <value>Est Aujourd'hui </value>
  </data>
  <data name="EditorStringId.FilterClauseIsNextWeek" xml:space="preserve">
    <value>Est la semaine prochaine</value>
  </data>
  <data name="EditorStringId.CaptionError" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="EditorStringId.CalculatorDivisionByZeroError" xml:space="preserve">
    <value>Peut pas être divider par zero</value>
  </data>
  <data name="EditorStringId.Copy" xml:space="preserve">
    <value>Copier</value>
  </data>
  <data name="EditorStringId.FilterClauseIsBeyondThisYear" xml:space="preserve">
    <value>Est au-delà de cette année</value>
  </data>
  <data name="EditorStringId.FilterEditorChecked" xml:space="preserve">
    <value>Coché</value>
  </data>
  <data name="EditorStringId.FilterClauseIsEarlierThisMonth" xml:space="preserve">
    <value>Est plus tôt ce mois</value>
  </data>
  <data name="EditorStringId.FilterGroupOr" xml:space="preserve">
    <value>Ou</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLike" xml:space="preserve">
    <value>Comme</value>
  </data>
  <data name="EditorStringId.Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNull" xml:space="preserve">
    <value>Est vide</value>
  </data>
  <data name="EditorStringId.CalculatorError" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="EditorStringId.FilterToolTipKeysRemove" xml:space="preserve">
    <value>(Utilisez la touche Suppr ou Soustraire)</value>
  </data>
  <data name="EditorStringId.FilterClauseAnyOf" xml:space="preserve">
    <value>Est un de</value>
  </data>
  <data name="EditorStringId.ColorEdit_StandardColorsCaption" xml:space="preserve">
    <value>Couleurs standards</value>
  </data>
  <data name="EditorStringId.ColorEdit_MoreColorsButtonCaption" xml:space="preserve">
    <value>Plus de couleurs ...</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeAdd" xml:space="preserve">
    <value>Ajouter une nouvelle condition à ce groupe</value>
  </data>
  <data name="EditorStringId.FilterClauseContains" xml:space="preserve">
    <value>Contient</value>
  </data>
  <data name="EditorStringId.Save" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorNot" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="EditorStringId.ColorEdit_ThemeColorsCaption" xml:space="preserve">
    <value>Thème Couleurs</value>
  </data>
  <data name="EditorStringId.FilterClauseLike" xml:space="preserve">
    <value>Egale à</value>
  </data>
  <data name="EditorStringId.CalculatorInvalidInputError" xml:space="preserve">
    <value>Entrée invalide</value>
  </data>
  <data name="EditorStringId.FilterClauseGreater" xml:space="preserve">
    <value>Est supérieure à</value>
  </data>
  <data name="EditorStringId.FilterClauseIsYesterday" xml:space="preserve">
    <value>Est Hier</value>
  </data>
  <data name="EditorStringId.FilterPanelDisableFilter" xml:space="preserve">
    <value>Desactiver filtre</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringNotLike" xml:space="preserve">
    <value>Pas comme</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Fields_Text" xml:space="preserve">
    <value>Zone</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBetween" xml:space="preserve">
    <value>Entre</value>
  </data>
  <data name="EditorStringId.FilterClauseIsTomorrow" xml:space="preserve">
    <value>Est Demain</value>
  </data>
  <data name="EditorStringId.FilterEmptyValueText" xml:space="preserve">
    <value>&lt;donner une valeur&gt;</value>
  </data>
  <data name="EditorStringId.FilterRulesEmptyValueText" xml:space="preserve">
    <value>Entrez une valeur...</value>
  </data>
  <data name="EditorStringId.FilterClauseGreaterOrEqual" xml:space="preserve">
    <value>Est supérieure ou égale à</value>
  </data>
  <data name="EditorStringId.FilterPanelEditFilter" xml:space="preserve">
    <value>Editer filtre</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorIsNull" xml:space="preserve">
    <value>Est NULL</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringGroupOperatorOr" xml:space="preserve">
    <value>Ou</value>
  </data>
  <data name="EditorStringId.FilterCriteriaInvalidExpressionEx" xml:space="preserve">
    <value>L'expression spécifié n'est pas valide.</value>
  </data>
  <data name="EditorStringId.FilterGroupNotOr" xml:space="preserve">
    <value>NonOu</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Functions_Text" xml:space="preserve">
    <value>Fonctions</value>
  </data>
  <data name="EditorStringId.FilterGroupAddCondition" xml:space="preserve">
    <value>Ajoutez condition</value>
  </data>
  <data name="EditorStringId.FilterCriteriaInvalidExpression" xml:space="preserve">
    <value>L'expression spécifié contient des symboles non valides (line {0}, character {1}).</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringIsNotNull" xml:space="preserve">
    <value>N'est pas NULL</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringGroupOperatorAnd" xml:space="preserve">
    <value>Et</value>
  </data>
  <data name="EditorStringId.FilterToolTipNodeAction" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="EditorStringId.FilterClauseNotLike" xml:space="preserve">
    <value>N'est pas comme</value>
  </data>
  <data name="EditorStringId.FilterClauseDoesNotContain" xml:space="preserve">
    <value>Ne contient pas</value>
  </data>
  <data name="EditorStringId.Today" xml:space="preserve">
    <value>Aujourd'hui</value>
  </data>
  <data name="EditorStringId.WaitIndicatorText" xml:space="preserve">
    <value>Chargement...</value>
  </data>
  <data name="EditorStringId.LookUpAddNew" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="EditorStringId.SetNullValue" xml:space="preserve">
    <value>Effacer</value>
  </data>
  <data name="EditorStringId.LookUpSearch" xml:space="preserve">
    <value>Recherche</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionIsNullOrEmpty" xml:space="preserve">
    <value>Est nul ou vide</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNotNullOrEmpty" xml:space="preserve">
    <value>N'est pas vide</value>
  </data>
  <data name="EditorStringId.DisplayFormatHelperWrongDisplayFormatValue" xml:space="preserve">
    <value>Texte de format d'affichage non valide</value>
  </data>
  <data name="EditorStringId.LookUpClose" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionEndsWith" xml:space="preserve">
    <value>Finit par</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionContains" xml:space="preserve">
    <value>Contient</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringFunctionStartsWith" xml:space="preserve">
    <value>Commence par</value>
  </data>
  <data name="EditorStringId.EmptyItem" xml:space="preserve">
    <value>(Aucun)</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNullOrEmpty" xml:space="preserve">
    <value>Est vide</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlPrefix" xml:space="preserve">
    <value>Préfixe :</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlSuffix" xml:space="preserve">
    <value>Suffixe :</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlDisplayFormatText" xml:space="preserve">
    <value>Texte de format d'affichage :</value>
  </data>
  <data name="EditorStringId.OutOfRange" xml:space="preserve">
    <value>La valeur est en dehors des limites</value>
  </data>
  <data name="EditorStringId.CalculatorButtonAdd" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.CalculatorButtonBack" xml:space="preserve">
    <value>←</value>
  </data>
  <data name="EditorStringId.CalculatorButtonCancel" xml:space="preserve">
    <value>CE</value>
  </data>
  <data name="EditorStringId.CalculatorButtonClear" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="EditorStringId.CalculatorButtonDiv" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="EditorStringId.CalculatorButtonEight" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="EditorStringId.CalculatorButtonEqual" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFive" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFour" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="EditorStringId.CalculatorButtonFract" xml:space="preserve">
    <value>1/x</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMAdd" xml:space="preserve">
    <value>M+</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSix" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSqrt" xml:space="preserve">
    <value>√</value>
  </data>
  <data name="EditorStringId.CalculatorButtonThree" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="EditorStringId.CalculatorButtonTwo" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="EditorStringId.CalculatorButtonZero" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="EditorStringId.CheckChecked" xml:space="preserve">
    <value>Coché</value>
  </data>
  <data name="EditorStringId.CheckIndeterminate" xml:space="preserve">
    <value>Indéterminé</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Black" xml:space="preserve">
    <value>Noir</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Blue" xml:space="preserve">
    <value>Bleu</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_DarkBlue" xml:space="preserve">
    <value>Bleu foncé</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_DarkRed" xml:space="preserve">
    <value>Rouge Foncé</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Green" xml:space="preserve">
    <value>Vert</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_LightBlue" xml:space="preserve">
    <value>Bleu Clair</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Purple" xml:space="preserve">
    <value>Pourpre</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Red" xml:space="preserve">
    <value>Rouge</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeCustom" xml:space="preserve">
    <value>Personnalisé</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeDefault" xml:space="preserve">
    <value>Par défaut</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeNumber" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypePercent" xml:space="preserve">
    <value>Pourcentage</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeSpecial" xml:space="preserve">
    <value>Spécial</value>
  </data>
  <data name="EditorStringId.DisplayFormatNullValue" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="EditorStringId.DisplayFormatTextControlExample" xml:space="preserve">
    <value>Exemple :</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseOr_Description" xml:space="preserve">
    <value>Compare chaque bit de son premier opérande au bit correspondant du second opérande. Si un bit est 1, le bit de résultat correspondant est défini à 1. Dans le cas contraire, le bit de résultat correspondante est défini sur 0.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Contains_Description" xml:space="preserve">
    <value>Contient (chaîne, sous-chaîne)
Retourne True si la sous-chaîne se produit au sein de la chaîne ; Sinon, False est retourné.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_EndsWith_Description" xml:space="preserve">
    <value>EndsWith (String, EndString)
Retourne True si la fin de la chaîne correspond à EndString ; Sinon, False est retourné.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNullOrEmpty_Description" xml:space="preserve">
    <value>IsNullOrEmpty(String)
Retourne True si l'objet String spécifié est NULL ou une chaîne vide ; Sinon, False est retourné.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Modulo_Description" xml:space="preserve">
    <value>Retourne le reste (modulo), obtenu en divisant une expression numérique en un autre.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_NotEqual_Description" xml:space="preserve">
    <value>Retourne true si les opérandes n'ont pas la même valeur ; sinon, elle retourne false.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Plus_Description" xml:space="preserve">
    <value>Ajoute de la valeur d'une expression numérique à une autre, ou concatène deux chaînes.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_StartsWith_Description" xml:space="preserve">
    <value>StartsWith (String, StartString)
Retourne True si le début de la chaîne correspond à StartString ; Sinon, False est retourné.</value>
  </data>
  <data name="EditorStringId.LookUpFind" xml:space="preserve">
    <value>Trouver</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMC" xml:space="preserve">
    <value>MC</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMR" xml:space="preserve">
    <value>MR</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMS" xml:space="preserve">
    <value>MS</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMSub" xml:space="preserve">
    <value>M-</value>
  </data>
  <data name="EditorStringId.CalculatorButtonMul" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="EditorStringId.CalculatorButtonNine" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="EditorStringId.CalculatorButtonOne" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="EditorStringId.CalculatorButtonPercent" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSeven" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSign" xml:space="preserve">
    <value>±</value>
  </data>
  <data name="EditorStringId.CalculatorButtonSub" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_LightGreen" xml:space="preserve">
    <value>Vert clair</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Orange" xml:space="preserve">
    <value>Orange</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_White" xml:space="preserve">
    <value>Blanc</value>
  </data>
  <data name="EditorStringId.ColorEdit_DefaultColors_Yellow" xml:space="preserve">
    <value>Jaune</value>
  </data>
  <data name="EditorStringId.ConfirmationDialogCaption" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="EditorStringId.DataTypeCharExample" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="EditorStringId.DataTypeStringExample" xml:space="preserve">
    <value>ABCXYZ</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeDatetime" xml:space="preserve">
    <value>DateTime</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Abs_Description" xml:space="preserve">
    <value>Abs(Value)
Retourne la valeur absolue et positive de l'expression numérique donnée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Acos_Description" xml:space="preserve">
    <value>Acos(Value)
Retourne l'arc cosinus d'un nombre (l'angle, en radians dont le cosinus est l'expression float spécifiée).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddDays_Description" xml:space="preserve">
    <value>AddDays (DateTime, DaysCount)
Retourne une valeur date-heure qui correspond au nombre spécifié de jours loin de la valeur DateTime spécifié.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddSeconds_Description" xml:space="preserve">
    <value>AddSeconds (DateTime, SecondsCount)
Retourne une valeur date-heure qui correspond au nombre spécifié de secondes de l'objet DateTime spécifié.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddTimeSpan_Description" xml:space="preserve">
    <value>AddTimeSpan (DateTime, TimeSpan)
Retourne une valeur de date et d'heure qui est loin du DateTime spécifié pour le TimeSpan donné.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddYears_Description" xml:space="preserve">
    <value>AddYears (DateTime, YearsCount)
Retourne une valeur de date et d'heure qui est le nombre spécifié d'années loin de la specieid DateTime.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_And_Description" xml:space="preserve">
    <value>Effectue une conjonction logique sur deux expressions.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Ascii_Description" xml:space="preserve">
    <value>Ascii(String)
Retourne la valeur de code ASCII du caractère le plus à gauche dans une expression de caractères.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Asin_Description" xml:space="preserve">
    <value>Asin(Value)
Renvoie l'arcsinus d'un nombre (l'angle, en radians, dont le sinus est l'expression float spécifiée).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Atn_Description" xml:space="preserve">
    <value>Atn(Value)
Renvoie l'arctangente d'un nombre (l'angle, en radians, dont la tangente est l'expression float spécifiée).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Atn2_Description" xml:space="preserve">
    <value>Atn2 (valeur1, valeur2)
Retourne l'angle dont la tangente est le quotient de deux nombres spécifiés, en radians.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AvgAggregate_Description" xml:space="preserve">
    <value>Avg(Value)
Évalue la moyenne des valeurs dans la collection.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Between_Description" xml:space="preserve">
    <value>Entre ()
Spécifie une plage de tester. Retourne true si une valeur est supérieure ou égale à la première opérande et inférieure ou égale à la deuxième opérande.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BigMul_Description" xml:space="preserve">
    <value>(valeur1, valeur2)
Retourne un Int64 contenant le produit intégral de deux spécifié nombres 32 bits.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseAnd_Description" xml:space="preserve">
    <value>Effectue une opération AND logique au niveau du bit entre deux valeurs entières.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_BitwiseXor_Description" xml:space="preserve">
    <value>Effectue une exclusion logique sur deux expressions Boolean ou une exclusion au niveau du bit sur deux expressions numériques.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Ceiling_Description" xml:space="preserve">
    <value>Ceiling(Value)
Retourne le plus petit entier qui est supérieure ou égale à l'expression numérique donnée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Char_Description" xml:space="preserve">
    <value>Char(Number)
Convertit un integerASCIICode en un caractère.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CharIndex_Description" xml:space="preserve">
    <value>CharIndex (String1, String2)
Retourne la position de départ de String1 dans String2, début de la position de caractère de zéro à la fin d'une chaîne.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CharIndex3Param_Description" xml:space="preserve">
    <value>CharIndex (Chaîne1, chaîne2, StartLocation)
Retourne la position de départ de String1 dans String2, début de la position de caractère StartLocation à la fin d'une chaîne.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Concat_Description" xml:space="preserve">
    <value>Concat (Chaîne1,..., StringN)
Retourne une valeur de chaîne contenant la concaténation de la chaîne actuelle avec toutes les autres chaînes.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Constants_Text" xml:space="preserve">
    <value>Constantes</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Cos_Description" xml:space="preserve">
    <value>Cos(Value)
Renvoie le cosinus de l'angle défini en radians.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Cosh_Description" xml:space="preserve">
    <value>Cosh(Value)
Renvoie le cosinus hyperbolique de l'angle défini en radians.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_CountAggregate_Description" xml:space="preserve">
    <value>Count()
Retourne le nombre d'objets dans une collection.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffDay_Description" xml:space="preserve">
    <value>DateDiffDay (startDate, endDate)
Retourne le nombre de limites de jour entre deux dates non nullable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffHour_Description" xml:space="preserve">
    <value>DateDiffHour (startDate, endDate)
Retourne le nombre de limites d'heures entre deux dates non nullable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMilliSecond_Description" xml:space="preserve">
    <value>DateDiffMilliSecond (startDate, endDate)
Retourne le nombre de limites de millisecondes entre deux dates non nullable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMinute_Description" xml:space="preserve">
    <value>DateDiffMinute (startDate, endDate)
Retourne le nombre de limites de minute entre deux dates non nullable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffMonth_Description" xml:space="preserve">
    <value>DateDiffMonth (startDate, endDate)
Retourne le nombre de limites de mois entre deux dates non nullable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffSecond_Description" xml:space="preserve">
    <value>DateDiffSecond (startDate, endDate)
Retourne le nombre de limites de seconde entre deux dates non nullable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffTick_Description" xml:space="preserve">
    <value>DateDiffTick (startDate, endDate)
Retourne le nombre de tiques limites entre deux dates non nullable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_DateDiffYear_Description" xml:space="preserve">
    <value>DateDiffYear (startDate, endDate)
Retourne le nombre de limites d'année entre deux dates non nullable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Divide_Description" xml:space="preserve">
    <value>Divise le premier opérande par le second.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Equal_Description" xml:space="preserve">
    <value>Retourne trues si les deux opérandes ont la même valeur ; sinon, elle retourne false.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Exp_Description" xml:space="preserve">
    <value>Exp(Value)
Renvoie la valeur exponentielle de l'expression float spécifiée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_False_Description" xml:space="preserve">
    <value>Représente la valeur booléenne False.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Floor_Description" xml:space="preserve">
    <value>Floor(Value)
Retourne le plus grand entier inférieur ou égal à l'expression numérique donnée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_AggregateItems" xml:space="preserve">
    <value>Agrégation</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_DateTimeItems" xml:space="preserve">
    <value>Date-heure</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_LogicalItems" xml:space="preserve">
    <value>Logique</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_MathItems" xml:space="preserve">
    <value>Math</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionType_StringItems" xml:space="preserve">
    <value>Chaîne</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDate_Description" xml:space="preserve">
    <value>GetDate(DateTime)
Extrait une date DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDay_Description" xml:space="preserve">
    <value>GetDay(DateTime)
Extrait un jour le DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDayOfWeek_Description" xml:space="preserve">
    <value>GetDayOfWeek(DateTime)
Extrait d'un jour de la semaine de la DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetDayOfYear_Description" xml:space="preserve">
    <value>GetDayOfYear(DateTime)
Extrait un jour de l'année de la valeur DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Iif_Description" xml:space="preserve">
    <value>Iif (Expression, valeur vrai, valeur faux)
Renvoie la valeur vrai ou FalsePart, selon l'évaluation de l'Expression booléenne.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_In_Description" xml:space="preserve">
    <value>In (,,,)
Tests de l'existence d'une propriété dans un objet.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Insert_Description" xml:space="preserve">
    <value>Insert (Chaîne1, StartPosition, String2)
Insère chaîne2 dans String1 à la position spécifiée par StartPositon</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNull_Description" xml:space="preserve">
    <value>IsNull(Value)
Retourne True si la valeur spécifiée est NULL.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisMonth_Description" xml:space="preserve">
    <value>IsThisMonth</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisWeek_Description" xml:space="preserve">
    <value>IsThisWeek</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsThisYear_Description" xml:space="preserve">
    <value>IsThisYear</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Len_Description" xml:space="preserve">
    <value>Len(Value)
Retourne un entier contenant le nombre de caractères dans une chaîne ou le nombre nominal d'octets requis pour stocker une variable.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LessOrEqual_Description" xml:space="preserve">
    <value>Inférieur ou égal à l'opérateur. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Like_Description" xml:space="preserve">
    <value>Compare une chaîne par rapport à un modèle. Si la valeur de la chaîne correspond au modèle, le résultat est vrai. Si la chaîne ne correspond pas au modèle, le résultat est false. Si string et pattern sont des chaînes vides, le résultat est vrai.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeDayAfterTomorrow_Description" xml:space="preserve">
    <value>LocalDateTimeDayAfterTomorrow()
Retourne une valeur date-heure correspondant à après-demain.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeLastWeek_Description" xml:space="preserve">
    <value>LocalDateTimeLastWeek()
Retourne une valeur date-heure correspondant au premier jour de la semaine précédente.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextMonth_Description" xml:space="preserve">
    <value>LocalDateTimeNextMonth()
Retourne une valeur date-heure correspondant au premier jour du mois suivant.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextWeek_Description" xml:space="preserve">
    <value>LocalDateTimeNextWeek()
Retourne une valeur date-heure correspondant au premier jour de la semaine suivante.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNextYear_Description" xml:space="preserve">
    <value>LocalDateTimeNextYear()
Retourne une valeur date-heure correspondant au premier jour de l'année suivante.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeNow_Description" xml:space="preserve">
    <value>LocalDateTimeNow()
Retourne une valeur date-heure correspondant à l'heure actuelle dans le temps.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisMonth_Description" xml:space="preserve">
    <value>LocalDateTimeThisMonth()
Retourne une valeur date-heure correspondant au premier jour du mois en cours.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisWeek_Description" xml:space="preserve">
    <value>LocalDateTimeThisWeek()
Retourne une valeur date-heure correspondant au premier jour de la semaine en cours.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeThisYear_Description" xml:space="preserve">
    <value>LocalDateTimeThisYear()
Retourne une valeur date-heure correspondant au premier jour de l'année en cours.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeToday_Description" xml:space="preserve">
    <value>LocalDateTimeToday()
Retourne une valeur date-heure correspondant à nos jours.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeTomorrow_Description" xml:space="preserve">
    <value>LocalDateTimeTomorrow()
Retourne une valeur date-heure correspondant à demain.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeTwoWeeksAway_Description" xml:space="preserve">
    <value>LocalDateTimeTwoWeeksAway()
Retourne une valeur date-heure correspondant au premier jour de la semaine suivant la semaine prochaine.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeYesterday_Description" xml:space="preserve">
    <value>LocalDateTimeYesterday()
Retourne une valeur date-heure correspondant aux hier.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log_Description" xml:space="preserve">
    <value>Log(Value)
Renvoie le logarithme népérien d'un nombre spécifié.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log10_Description" xml:space="preserve">
    <value>Log10(Value)
Logarithme de retours base 10 d'un nombre spécifié.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Log2Param_Description" xml:space="preserve">
    <value>Journal (valeur, Base)
Retourne le logarithme d'un nombre spécifié dans une Base spécifiée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Lower_Description" xml:space="preserve">
    <value>Lower(String)
Retourne la chaîne en minuscules.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Max_Description" xml:space="preserve">
    <value>Max (valeur1, valeur2)
Retourne la valeur maximale des valeurs spécifiés.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_MaxAggregate_Description" xml:space="preserve">
    <value>Max(Value)
Retourne la valeur de l'expression maximale dans une collection.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Min_Description" xml:space="preserve">
    <value>Min (valeur1, valeur2)
Retourne la valeur minimale de le valeurs spécifiées.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_MinAggregate_Description" xml:space="preserve">
    <value>Min(Value)
Renvoie la valeur de l'expression minimum d'une collection.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Minus_Description" xml:space="preserve">
    <value>Détecte la différence entre deux nombres.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Multiply_Description" xml:space="preserve">
    <value>Multiplie la valeur de deux expressions.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Not_Description" xml:space="preserve">
    <value>Effectue une négation logique sur une expression.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Operators_Text" xml:space="preserve">
    <value>Opérateurs</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Or_Description" xml:space="preserve">
    <value>Effectue une disjonction logique sur deux expressions Boolean.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadLeft_Description" xml:space="preserve">
    <value>PadLeft (chaîne, longueur)
Aligne à gauche les caractères de la chaîne définie, rembourrage de son côté gauche avec des caractères d'espace blanc jusqu'à une longueur totale spécifiée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadLeft3Param_Description" xml:space="preserve">
    <value>PadLeft (chaîne, longueur, Char)
Aligne à gauche les caractères de la chaîne définie, rembourrage de son côté gauche avec le Char spécifié jusqu'à une longueur totale spécifiée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadRight_Description" xml:space="preserve">
    <value>PadRight (chaîne, longueur)
Aligne à droite les caractères de la chaîne définie, rembourrage de son côté gauche avec des caractères d'espace blanc jusqu'à une longueur totale spécifiée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_PadRight3Param_Description" xml:space="preserve">
    <value>PadRight (chaîne, longueur, Char)
Aligne à droite les caractères de la chaîne définie, rembourrage de son côté gauche avec le Char spécifié jusqu'à une longueur totale spécifiée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Replace_Description" xml:space="preserve">
    <value>Replace (String, SubString2, String3)
Retourne une copie de String1, dans lequel SubString2 a été remplacé par String3.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Reverse_Description" xml:space="preserve">
    <value>Reverse(String)
Inverse l'ordre des éléments dans une chaîne de.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Round_Description" xml:space="preserve">
    <value>Round(Value)
Arrondit la valeur donnée à l'entier le plus proche.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sign_Description" xml:space="preserve">
    <value>Sign(Value)
Retourne le positif (+ 1), zéro (0) ou négatif (-1) signe de l'expression donnée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sin_Description" xml:space="preserve">
    <value>Sin(Value)
Retourne le sinus de l'angle, défini en radians.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_SingleAggregate_Description" xml:space="preserve">
    <value>Single]
Retourne un seul objet de la collection.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sinh_Description" xml:space="preserve">
    <value>Sinh(Value)
Renvoie le sinus hyperbolique de l'angle défini en radians.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Sqr_Description" xml:space="preserve">
    <value>Sqr(Value)
Renvoie la racine carrée d'un nombre donné.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Substring2param_Description" xml:space="preserve">
    <value>Substring (chaîne, StartPosition)
Récupère une sous-chaîne de la chaîne. La sous-chaîne démarre à StartPosition.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Substring3param_Description" xml:space="preserve">
    <value>Substring (chaîne, StartPosition, longueur)
Récupère une sous-chaîne de la chaîne. La sous-chaîne démarre à StartPosition et a la longueur fixée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_SumAggregate_Description" xml:space="preserve">
    <value>MySQL
Retourne la somme de toutes les valeurs de l'expression dans la collection.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Tan_Description" xml:space="preserve">
    <value>Tan(Value)
Renvoie la tangente de l'angle défini en radians.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Tanh_Description" xml:space="preserve">
    <value>Tanh(Value)
Renvoie la tangente hyperbolique de l'angle défini en radians.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Title" xml:space="preserve">
    <value>Éditeur d'expressions</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToDecimal_Description" xml:space="preserve">
    <value>ToDecimal(Value)
Convertit la valeur d'un nombre décimal équivalent.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToDouble_Description" xml:space="preserve">
    <value>ToDouble(Value)
Convertit la valeur d'un nombre à virgule flottante double précision équivalent de 64-bit.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToFloat_Description" xml:space="preserve">
    <value>ToFloat(Value)
Convertit la valeur d'un nombre à virgule flottante simple précision équivalent de 32 bits.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToInt_Description" xml:space="preserve">
    <value>ToInt(Value)
Convertit la valeur d'un entier signé de 32 bits équivalent.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToLong_Description" xml:space="preserve">
    <value>ToLong(Value)
Convertit la valeur en entier signé 64 bits équivalent.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ToStr_Description" xml:space="preserve">
    <value>ToStr(Value)
Retourne une représentation de chaîne d'un objet.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Trim_Description" xml:space="preserve">
    <value>Trim(String)
Supprime tous les espaces de début et de fin de chaîne.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_True_Description" xml:space="preserve">
    <value>Représente la valeur booléenne True.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Upper_Description" xml:space="preserve">
    <value>Upper(String)
Retourne la chaîne en majuscules.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_UtcNow_Description" xml:space="preserve">
    <value>UtcNow()
Retourne la date système actuelle et l'heure exprimée en temps universel coordonné (UTC).</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseAnd" xml:space="preserve">
    <value>&amp;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseOr" xml:space="preserve">
    <value>|</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorBitwiseXor" xml:space="preserve">
    <value>^</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorDivide" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorEqual" xml:space="preserve">
    <value>=</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorGreater" xml:space="preserve">
    <value>&gt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorGreaterOrEqual" xml:space="preserve">
    <value>&gt; =</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLess" xml:space="preserve">
    <value>&lt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorModulo" xml:space="preserve">
    <value>%</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorMultiply" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorNotEqual" xml:space="preserve">
    <value>&lt;&gt;</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorBitwiseNot" xml:space="preserve">
    <value>~</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorMinus" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringUnaryOperatorPlus" xml:space="preserve">
    <value>+</value>
  </data>
  <data name="EditorStringId.ImageEdit_InvalidFormatMessage" xml:space="preserve">
    <value>Format d'image incorrect</value>
  </data>
  <data name="EditorStringId.ImageEdit_OpenFileFilter" xml:space="preserve">
    <value>Image Files(*.BMP; *.JPG; *.GIF; *.PNG) | *.BMP; *.JPG; *.GIF; *.PNG|Tous les fichiers (*. *) | *. *</value>
  </data>
  <data name="EditorStringId.ImageEdit_SaveFileFilter" xml:space="preserve">
    <value>PNG(*.png)|*.Png|BMP(*.bmp)|*.BMP|JPG(*.jpg)|*.Jpg|GIF(.gif)|*.gif</value>
  </data>
  <data name="EditorStringId.InvalidValueConversion" xml:space="preserve">
    <value>conversion de valeur non valide</value>
  </data>
  <data name="EditorStringId.ListBoxSelectAllSelectionMode" xml:space="preserve">
    <value>peut uniquement appeler SelectAll lorsque SelectionMode est Multiple ou Extended.</value>
  </data>
  <data name="EditorStringId.MaskIncomplete" xml:space="preserve">
    <value>Masque incomplet</value>
  </data>
  <data name="EditorStringId.Of" xml:space="preserve">
    <value>de {0}</value>
  </data>
  <data name="EditorStringId.OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="EditorStringId.Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddHours_Description" xml:space="preserve">
    <value>AddHours(DateTime, HoursCount)
Retourne une valeur de date et d'heure qui est le nombre d'heures de route le DateTime spécifié spécifié.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMilliSeconds_Description" xml:space="preserve">
    <value>AddMilliSeconds(DateTime, MilliSecondsCount)
Retourne une valeur date-heure qui correspond au nombre spécifié de millisecondes de l'objet DateTime spécifié.</value>
  </data>
  <data name="EditorStringId.ColorPickerAlpha" xml:space="preserve">
    <value>Alpha</value>
  </data>
  <data name="EditorStringId.ColorPickerBlue" xml:space="preserve">
    <value>Bleu</value>
  </data>
  <data name="EditorStringId.ColorPickerBrightness" xml:space="preserve">
    <value>Luminosité</value>
  </data>
  <data name="EditorStringId.ColorPickerCyan" xml:space="preserve">
    <value>Cyan</value>
  </data>
  <data name="EditorStringId.ColorPickerGreen" xml:space="preserve">
    <value>Vert</value>
  </data>
  <data name="EditorStringId.ColorPickerHue" xml:space="preserve">
    <value>Hue</value>
  </data>
  <data name="EditorStringId.ColorPickerKeyColor" xml:space="preserve">
    <value>Color Key</value>
  </data>
  <data name="EditorStringId.ColorPickerLightness" xml:space="preserve">
    <value>Légèreté</value>
  </data>
  <data name="EditorStringId.ColorPickerMagenta" xml:space="preserve">
    <value>Magenta</value>
  </data>
  <data name="EditorStringId.ColorPickerRed" xml:space="preserve">
    <value>Rouge</value>
  </data>
  <data name="EditorStringId.ColorPickerSaturation" xml:space="preserve">
    <value>Saturation</value>
  </data>
  <data name="EditorStringId.ColorPickerYellow" xml:space="preserve">
    <value>Jaune</value>
  </data>
  <data name="EditorStringId.CheckUnchecked" xml:space="preserve">
    <value>Décoché</value>
  </data>
  <data name="EditorStringId.DisplayFormatGroupTypeCurrency" xml:space="preserve">
    <value>Monnaie</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_ExistsAggregate_Description" xml:space="preserve">
    <value>Exists()
Détermine si l'objet existe dans la collection.</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBinaryOperatorLessOrEqual" xml:space="preserve">
    <value>&lt;=</value>
  </data>
  <data name="EditorStringId.HLS" xml:space="preserve">
    <value>HLS</value>
  </data>
  <data name="EditorStringId.HSB" xml:space="preserve">
    <value>HSB</value>
  </data>
  <data name="EditorStringId.ConfirmationDialogMessage" xml:space="preserve">
    <value>La police « {0} » n'est pas disponible sur votre système. Vous souhaitez utiliser quand même?</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMinutes_Description" xml:space="preserve">
    <value>(DateTime, MinutesCount)
Retourne une valeur date-heure qui correspond au nombre spécifié de minutes le DateTime spécifié.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddMonths_Description" xml:space="preserve">
    <value>(DateTime, MonthsCount)
Retourne une valeur date-heure qui correspond au nombre spécifié de mois loin de l'objet DateTime spécifié.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_AddTicks_Description" xml:space="preserve">
    <value>(DateTime, TicksCount)
Retourne une valeur date-heure qui correspond au nombre spécifié de graduations loin le DateTime spécifié.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetHour_Description" xml:space="preserve">
    <value>GetHour(DateTime)
Extrait une heure DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMilliSecond_Description" xml:space="preserve">
    <value>GetMilliSecond(DateTime)
Extraits de millisecondes de l'objet DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMinute_Description" xml:space="preserve">
    <value>GetMinute(DateTime)
Extraits des minutes de l'objet DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetMonth_Description" xml:space="preserve">
    <value>GetMonth (DateTime)
Extrait d'un mois de la DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetSecond_Description" xml:space="preserve">
    <value>GetSecond(DateTime)
Extraits des secondes de l'objet DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetTimeOfDay_Description" xml:space="preserve">
    <value>GetTimeOfDay(DateTime)
Extrait l'heure de la journée de la DateTime défini, chez les tiques.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GetYear_Description" xml:space="preserve">
    <value>GetYear(DateTime)
Extrait d'un an de DateTime défini.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Greater_Description" xml:space="preserve">
    <value>Opérateur supérieur à. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GreaterOrEqual_Description" xml:space="preserve">
    <value>Supérieure ou égale à l'opérateur. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_GridFields_Description_Prefix" xml:space="preserve">
    <value>Légende : {1}
Le type de ce champ est : {2}</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Less_Description" xml:space="preserve">
    <value>Moins d'opérateur. Utilisé pour comparer des expressions.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Now_Description" xml:space="preserve">
    <value>Maintenant()
Retourne la date système actuelle et l'heure.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Null_Description" xml:space="preserve">
    <value>Représente une référence null, celui qui ne fait pas référence à n'importe quel objet.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Power_Description" xml:space="preserve">
    <value>Puissance (valeur, puissance)
Retourne un nombre élevé à une puissance spécifiée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Remove_Description" xml:space="preserve">
    <value>(longueur de la chaîne, StartPosition)
Supprime un nombre spécifié de caractères de cette instance, commençant à la position spécifiée.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Rnd_Description" xml:space="preserve">
    <value>Renvoie un nombre aléatoire qui est inférieur à 1, mais supérieur ou égal à zéro.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Round2Param_Description" xml:space="preserve">
    <value>Tour (valeur, précision)
Arrondit la valeur donnée à l'entier le plus proche, ou à un nombre spécifié de décimales.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Today_Description" xml:space="preserve">
    <value>Aujourdhui()
Retourne la date actuelle. Quel que soit le temps réel, cette fonction retourne minuit de la date du jour.</value>
  </data>
  <data name="EditorStringId.ImageEdit_OpenFileFilter_SL" xml:space="preserve">
    <value>Files(*. ImageJPG; *.PNG) | *.JPG; *.PNG|Tous les fichiers (*. *) | *. *</value>
  </data>
  <data name="EditorStringId.PasswordBoxEditToolTipContent" xml:space="preserve">
    <value>Activation Caps Lock peut entraîner en entrant le mot de passe incorrectement.
Désactiver le verrouillage des majuscules avant d'entrer votre mot de passe.</value>
  </data>
  <data name="EditorStringId.RGB" xml:space="preserve">
    <value>RGB</value>
  </data>
  <data name="EditorStringId.SparklineViewArea" xml:space="preserve">
    <value>Zone</value>
  </data>
  <data name="EditorStringId.SparklineViewLine" xml:space="preserve">
    <value>Ligne</value>
  </data>
  <data name="EditorStringId.SparklineViewBar" xml:space="preserve">
    <value>Barre</value>
  </data>
  <data name="EditorStringId.PasswordBoxEditToolTipHeader" xml:space="preserve">
    <value>Verrouillage des majuscules est sur</value>
  </data>
  <data name="EditorStringId.CMYK" xml:space="preserve">
    <value>CMYK</value>
  </data>
  <data name="EditorStringId.DatePickerHours" xml:space="preserve">
    <value>heures</value>
  </data>
  <data name="EditorStringId.CantModifySelectedDates" xml:space="preserve">
    <value>Ne pouvez modifier la collection SelectedDates en mode de sélection multiple. Utiliser FocusedDate en mode select simple.</value>
  </data>
  <data name="EditorStringId.Caption_CommonCharactersToggleButton" xml:space="preserve">
    <value>Caractères courants</value>
  </data>
  <data name="EditorStringId.Caption_SpecialCharactersToggleButton" xml:space="preserve">
    <value>Caractères spéciaux</value>
  </data>
  <data name="EditorStringId.Caption_SymbolFormCharacterSet" xml:space="preserve">
    <value>Jeu de caractères :</value>
  </data>
  <data name="EditorStringId.Caption_SymbolFormFilter" xml:space="preserve">
    <value>Filtre :</value>
  </data>
  <data name="EditorStringId.Caption_SymbolFormFontName" xml:space="preserve">
    <value>Nom de la police :</value>
  </data>
  <data name="EditorStringId.Caption_SymbolFormSearchByCode" xml:space="preserve">
    <value>Recherche par code :</value>
  </data>
  <data name="EditorStringId.DatePickerMinutes" xml:space="preserve">
    <value>mins</value>
  </data>
  <data name="EditorStringId.DatePickerSeconds" xml:space="preserve">
    <value>secs</value>
  </data>
  <data name="EditorStringId.SparklineViewWinLoss" xml:space="preserve">
    <value>WinLoss</value>
  </data>
  <data name="EditorStringId.DatePickerMilliseconds" xml:space="preserve">
    <value>MS</value>
  </data>
  <data name="EditorStringId.BrushEditRadial" xml:space="preserve">
    <value>Radial</value>
  </data>
  <data name="EditorStringId.BrushEditCenter" xml:space="preserve">
    <value>Centre</value>
  </data>
  <data name="EditorStringId.BrushEditNone" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeToday" xml:space="preserve">
    <value>Aujourd'hui</value>
  </data>
  <data name="EditorStringId.BrushEditSolid" xml:space="preserve">
    <value>Plein</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeTomorrow" xml:space="preserve">
    <value>Demain</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeYesterday" xml:space="preserve">
    <value>Hier</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeLastWeek" xml:space="preserve">
    <value>Semaine dernière</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeNextMonth" xml:space="preserve">
    <value>Mois prochain</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeNextWeek" xml:space="preserve">
    <value>Semaine prochaine</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeNextYear" xml:space="preserve">
    <value>Année prochaine</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeTwoWeeksAway" xml:space="preserve">
    <value>Dans deux semaines</value>
  </data>
  <data name="EditorStringId.BrushEditGradientOriginDescription" xml:space="preserve">
    <value>Obtient ou définit le point focal à deux dimensions qui définit le début d'un gradient.</value>
  </data>
  <data name="EditorStringId.CameraRefreshButtonCaption" xml:space="preserve">
    <value>Actualiser</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Parameters_Text" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Variables_Text" xml:space="preserve">
    <value>Variables</value>
  </data>
  <data name="EditorStringId.CameraBrightnessCaption" xml:space="preserve">
    <value>Luminosité :</value>
  </data>
  <data name="EditorStringId.CameraContrastCaption" xml:space="preserve">
    <value>Contraste :</value>
  </data>
  <data name="EditorStringId.CameraDesaturateCaption" xml:space="preserve">
    <value>Désaturer:</value>
  </data>
  <data name="EditorStringId.CameraNoDevicesErrorCaption" xml:space="preserve">
    <value>L'application n'a pas pu trouver une webcam.</value>
  </data>
  <data name="EditorStringId.CameraResetButtonCaption" xml:space="preserve">
    <value>Réinitialiser par défaut</value>
  </data>
  <data name="EditorStringId.CameraResolutionCaption" xml:space="preserve">
    <value>Résolution :</value>
  </data>
  <data name="EditorStringId.CameraSettingsCaption" xml:space="preserve">
    <value>Réglages de l'appareil</value>
  </data>
  <data name="EditorStringId.CameraAgainButtonCaption" xml:space="preserve">
    <value>Réessayez</value>
  </data>
  <data name="EditorStringId.LookUpNext" xml:space="preserve">
    <value>Suivant</value>
  </data>
  <data name="EditorStringId.LookUpPrevious" xml:space="preserve">
    <value>Précédent</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_Parameters_Description_Prefix" xml:space="preserve">
    <value>Le type de ce paramètre est : {0}</value>
  </data>
  <data name="EditorStringId.CameraCaptureButtonCaption" xml:space="preserve">
    <value>Capture</value>
  </data>
  <data name="EditorStringId.CameraDeviceCaption" xml:space="preserve">
    <value>Dispositif :</value>
  </data>
  <data name="EditorStringId.CameraErrorCaption" xml:space="preserve">
    <value>La webcam n'est pas disponible. Essayez de fermer d'autres applications susceptibles d'utiliser it.</value>
  </data>
  <data name="EditorStringId.CameraTakePictureToolTip" xml:space="preserve">
    <value>Prendre la photo de la caméra</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryFormat" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryLetterNumber" xml:space="preserve">
    <value>Numéro de la lettre</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryLineSeparator" xml:space="preserve">
    <value>Séparateur de ligne</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryLowercaseLetter" xml:space="preserve">
    <value>Lettre minuscule</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryFinalQuotePunctuation" xml:space="preserve">
    <value>Signe de ponctuation final Quote</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryDecimalDigitNumber" xml:space="preserve">
    <value>Nombre de chiffres décimaux</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryConnectorPunctuation" xml:space="preserve">
    <value>Signe de ponctuation connecteur</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryAllSymbols" xml:space="preserve">
    <value>Tous les symboles</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryModifierLetter" xml:space="preserve">
    <value>Lettre modificative</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryModifierSymbol" xml:space="preserve">
    <value>Symbole de modificateur</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryOpenPunctuation" xml:space="preserve">
    <value>Ponctuation ouverte</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryOtherLetter" xml:space="preserve">
    <value>Autre lettre</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryOtherNotAssigned" xml:space="preserve">
    <value>Autres non affectée</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryOtherNumber" xml:space="preserve">
    <value>Autre numéro</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryOtherPunctuation" xml:space="preserve">
    <value>Autre signe de ponctuation</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryOtherSymbol" xml:space="preserve">
    <value>Autre symbole</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryParagraphSeparator" xml:space="preserve">
    <value>Séparateur de paragraphe</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryPrivateUse" xml:space="preserve">
    <value>Utilisation privée</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategorySpaceSeparator" xml:space="preserve">
    <value>Espace de séparation</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategorySpacingCombiningMark" xml:space="preserve">
    <value>Espacement combinant Mark</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategorySurrogate" xml:space="preserve">
    <value>Mère porteuse</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryTitlecaseLetter" xml:space="preserve">
    <value>Lettre initiale majuscule</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryUppercaseLetter" xml:space="preserve">
    <value>Lettre majuscule</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsLastMonth_Description" xml:space="preserve">
    <value>IsLastMonth(DateTime)
Retourne True si la date spécifiée s’inscrit dans le mois précédent.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsLastYear_Description" xml:space="preserve">
    <value>IsLastYear(DateTime)
Retourne True si la date spécifiée s’inscrit dans l’année précédente.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNextMonth_Description" xml:space="preserve">
    <value>IsNextMonth(DateTime)
Retourne True si la date spécifiée s’inscrit dans le mois suivant.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeLastMonth_Description" xml:space="preserve">
    <value>LocalDateTimeLastMonth()
Retourne une valeur date-heure correspondant au premier jour du mois précédent.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeLastYear_Description" xml:space="preserve">
    <value>LocalDateTimeLastYear()
Retourne une valeur date-heure correspondant au premier jour de l’année précédente.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeYearBeforeToday_Description" xml:space="preserve">
    <value>LocalDateTimeYearBeforeToday()
Retourne une valeur date-heure correspondant à l’année de la première journée il y a.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNextYear_Description" xml:space="preserve">
    <value>IsNextYear(DateTime)
Retourne True si la date spécifiée s’inscrit dans la prochaine année.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsApril_Description" xml:space="preserve">
    <value>IsApril(DateTime)
Retourne True si la date spécifiée relève avril.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsAugust_Description" xml:space="preserve">
    <value>IsAugust(DateTime)
Retourne True si la date spécifiée relève août.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsDecember_Description" xml:space="preserve">
    <value>IsDecember(DateTime)
Retourne True si la date spécifiée relève décembre.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsFebruary_Description" xml:space="preserve">
    <value>IsFebruary(DateTime)
Retourne True si la date spécifiée relève février.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsJanuary_Description" xml:space="preserve">
    <value>IsJanuary(DateTime)
Retourne True si la date spécifiée relève janvier.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsJuly_Description" xml:space="preserve">
    <value>IsJuly(DateTime)
Retourne True si la date spécifiée relève juillet.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsJune_Description" xml:space="preserve">
    <value>IsJune(DateTime)
Retourne True si la date spécifiée relève juin.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsMarch_Description" xml:space="preserve">
    <value>IsMarch(DateTime)
Retourne True si la date spécifiée relève mars.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsMay_Description" xml:space="preserve">
    <value>IsMay(DateTime)
Retourne True si la date spécifiée relève de la mai.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsNovember_Description" xml:space="preserve">
    <value>IsNovember(DateTime)
Retourne True si la date spécifiée relève novembre.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsOctober_Description" xml:space="preserve">
    <value>IsOctober(DateTime)
Retourne True si la date spécifiée relève octobre.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsSameDay_Description" xml:space="preserve">
    <value>IsSameDay (DateTime, DateTime)
Retourne True si les valeurs de date et heure spécifiées relèvent le même jour.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsSeptember_Description" xml:space="preserve">
    <value>IsSeptember(DateTime)
Retourne True si la date spécifiée relève septembre.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_IsYearToDate_Description" xml:space="preserve">
    <value>IsYearToDate(DateTime)
Retourne True si la date spécifiée tombe dans la période de l’année à ce jour (commençant dès le premier jour de l’année en cours et en continuant jusqu'à la date actuelle).</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeTwoMonthsAway_Description" xml:space="preserve">
    <value>LocalDateTimeTwoMonthsAway()
Retourne une valeur date-heure correspondant au premier jour du mois suivant suivant.</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_LocalDateTimeTwoYearsAway_Description" xml:space="preserve">
    <value>LocalDateTimeTwoYearsAway()
Retourne une valeur date-heure correspondant au premier jour de l’année après l’autre.</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryNonSpacingMark" xml:space="preserve">
    <value>Marque d’association sans espacement inclus</value>
  </data>
  <data name="EditorStringId.BrushEditLinear" xml:space="preserve">
    <value>Linéaire</value>
  </data>
  <data name="EditorStringId.ExpressionEditor_FunctionsSearch_NullText" xml:space="preserve">
    <value>Entrez le texte à rechercher...</value>
  </data>
  <data name="EditorStringId.FilterClauseLocalDateTimeNow" xml:space="preserve">
    <value>Maintenant</value>
  </data>
  <data name="EditorStringId.RefreshPage" xml:space="preserve">
    <value>Actualiser</value>
  </data>
  <data name="EditorStringId.FirstPage" xml:space="preserve">
    <value>Première page</value>
  </data>
  <data name="EditorStringId.NextPage" xml:space="preserve">
    <value>Page suivante</value>
  </data>
  <data name="EditorStringId.PrevPage" xml:space="preserve">
    <value>Page précédente</value>
  </data>
  <data name="EditorStringId.FilterElementClauseFrom" xml:space="preserve">
    <value>De</value>
  </data>
  <data name="EditorStringId.FilterElementAllItem" xml:space="preserve">
    <value>(Tous)</value>
  </data>
  <data name="EditorStringId.FilterElementEmptyItem" xml:space="preserve">
    <value>(Vide)</value>
  </data>
  <data name="EditorStringId.FilterElementDateRangeFrom" xml:space="preserve">
    <value>De</value>
  </data>
  <data name="EditorStringId.FilterClauseIsOutlookIntervalToday" xml:space="preserve">
    <value>Aujourd'hui</value>
  </data>
  <data name="EditorStringId.FilterClauseIsOutlookIntervalTomorrow" xml:space="preserve">
    <value>Demain</value>
  </data>
  <data name="EditorStringId.FilterClauseIsOutlookIntervalYesterday" xml:space="preserve">
    <value>Hier</value>
  </data>
  <data name="EditorStringId.FilterElementRadioAllItem" xml:space="preserve">
    <value>(Tous)</value>
  </data>
  <data name="EditorStringId.Caption_UnicodeCategoryControl" xml:space="preserve">
    <value>Contrôle</value>
  </data>
  <data name="EditorStringId.TimeSpanDaysPlural" xml:space="preserve">
    <value>jours</value>
  </data>
  <data name="EditorStringId.TimeSpanHoursPlural" xml:space="preserve">
    <value>heures</value>
  </data>
  <data name="EditorStringId.FilterClauseIsOutlookIntervalLastWeek" xml:space="preserve">
    <value>Semaine dernière</value>
  </data>
  <data name="EditorStringId.FilterClauseIsOutlookIntervalNextWeek" xml:space="preserve">
    <value>Semaine prochaine</value>
  </data>
  <data name="EditorStringId.ThemedWindow_Close" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="EditorStringId.ThemedWindow_Maximize" xml:space="preserve">
    <value>Maximiser</value>
  </data>
  <data name="EditorStringId.ThemedWindow_Restore" xml:space="preserve">
    <value>Restaurer</value>
  </data>
  <data name="EditorStringId.LookUpShow" xml:space="preserve">
    <value>&gt;Rechercher</value>
  </data>
  <data name="EditorStringId.FilterGroupNotAndMenuCaption" xml:space="preserve">
    <value>Pas et</value>
  </data>
  <data name="EditorStringId.FilterGroupNotOrMenuCaption" xml:space="preserve">
    <value>Pas ou</value>
  </data>
  <data name="EditorStringId.TimeSpanDaysShort" xml:space="preserve">
    <value>d</value>
  </data>
  <data name="EditorStringId.TimeSpanSecondsPlural" xml:space="preserve">
    <value>Secondes</value>
  </data>
  <data name="EditorStringId.TimeSpanSecondsShort" xml:space="preserve">
    <value>S</value>
  </data>
  <data name="EditorStringId.TimeSpanFractionalSecondsShort" xml:space="preserve">
    <value>f</value>
  </data>
  <data name="EditorStringId.TimeSpanHours" xml:space="preserve">
    <value>heure</value>
  </data>
  <data name="EditorStringId.TimeSpanHoursShort" xml:space="preserve">
    <value>H</value>
  </data>
  <data name="EditorStringId.TimeSpanMilliseconds" xml:space="preserve">
    <value>Milliseconde</value>
  </data>
  <data name="EditorStringId.TimeSpanMillisecondsPlural" xml:space="preserve">
    <value>Millisecondes</value>
  </data>
  <data name="EditorStringId.TimeSpanMillisecondsShort" xml:space="preserve">
    <value>MS</value>
  </data>
  <data name="EditorStringId.TimeSpanMinutes" xml:space="preserve">
    <value>minute</value>
  </data>
  <data name="EditorStringId.TimeSpanMinutesPlural" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="EditorStringId.TimeSpanMinutesShort" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="EditorStringId.FilterClauseIsJanuary" xml:space="preserve">
    <value>Est janvier</value>
  </data>
  <data name="EditorStringId.FilterClauseIsJuly" xml:space="preserve">
    <value>Est juillet</value>
  </data>
  <data name="EditorStringId.FilterClauseIsJune" xml:space="preserve">
    <value>Est juin</value>
  </data>
  <data name="EditorStringId.FilterClauseIsMarch" xml:space="preserve">
    <value>Est mars</value>
  </data>
  <data name="EditorStringId.FilterClauseIsMay" xml:space="preserve">
    <value>Est mai</value>
  </data>
  <data name="EditorStringId.FilterClauseIsNovember" xml:space="preserve">
    <value>Est novembre</value>
  </data>
  <data name="EditorStringId.FilterClauseIsOctober" xml:space="preserve">
    <value>Est octobre</value>
  </data>
  <data name="EditorStringId.FilterClauseIsApril" xml:space="preserve">
    <value>Est avril</value>
  </data>
  <data name="EditorStringId.FilterClauseIsAugust" xml:space="preserve">
    <value>Est août</value>
  </data>
  <data name="EditorStringId.FilterClauseIsDecember" xml:space="preserve">
    <value>Est décembre</value>
  </data>
  <data name="EditorStringId.FilterClauseIsFebruary" xml:space="preserve">
    <value>Est février</value>
  </data>
  <data name="EditorStringId.DateIntervalsMenuCaption" xml:space="preserve">
    <value>Intervalles de date</value>
  </data>
  <data name="EditorStringId.TimeSpanSeconds" xml:space="preserve">
    <value>Deuxième</value>
  </data>
  <data name="EditorStringId.LookUpResultInfo" xml:space="preserve">
    <value>{0} / {1}</value>
  </data>
  <data name="EditorStringId.TimeSpanFractionalSeconds" xml:space="preserve">
    <value>fractionnée</value>
  </data>
  <data name="EditorStringId.TimeSpanFractionalSecondsPlural" xml:space="preserve">
    <value>fractionnée</value>
  </data>
  <data name="EditorStringId.TimeSpanDays" xml:space="preserve">
    <value>Journée</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringAboveAverage" xml:space="preserve">
    <value>Au-dessus de la moyenne</value>
  </data>
  <data name="EditorStringId.PredefinedFormatConditionAboveAverage" xml:space="preserve">
    <value>Au-dessus de la moyenne</value>
  </data>
  <data name="EditorStringId.FilterCriteriaToStringBelowAverage" xml:space="preserve">
    <value>Au-dessous de moyenne</value>
  </data>
  <data name="EditorStringId.PredefinedFormatConditionBelowAverage" xml:space="preserve">
    <value>Au-dessous de moyenne</value>
  </data>
  <data name="EditorStringId.TopBottomValueTypePercent" xml:space="preserve">
    <value>Pourcentage</value>
  </data>
  <data name="EditorStringId.PredefinedFormatConditionDuplicate" xml:space="preserve">
    <value>Dupliquer</value>
  </data>
  <data name="EditorStringId.PredefinedFormatConditionUnique" xml:space="preserve">
    <value>Unique</value>
  </data>
  <data name="EditorStringId.FilterOperandValue" xml:space="preserve">
    <value>Valeur</value>
  </data>
  <data name="EditorStringId.FilterOperandParameter" xml:space="preserve">
    <value>Paramètre</value>
  </data>
  <data name="EditorStringId.TopBottomValueTypeItems" xml:space="preserve">
    <value>Éléments</value>
  </data>
  <data name="EditorStringId.FilterPanelClauseBottom" xml:space="preserve">
    <value>Bas</value>
  </data>
  <data name="EditorStringId.FilterPanelClauseTop" xml:space="preserve">
    <value>Haut</value>
  </data>
  <data name="EditorStringId.FilterPanelClauseBetween" xml:space="preserve">
    <value>Entre</value>
  </data>
  <data name="EditorStringId.TrackBarEditRangeCaption" xml:space="preserve">
    <value>{0} - {1}</value>
  </data>
  <data name="EditorStringId.FilterClauseIsSeptember" xml:space="preserve">
    <value>Est septembre</value>
  </data>
</root>